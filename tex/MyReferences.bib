@book{Antonopoulos2016,
	abstract = {The following topics are dealt with: food supply system; risk assessment; ergonomics; lean manufacturing; sustainability index; generic algorithm; flow shop scheduling; human resource management; decision making; resource allocation; parallel machines; Kanban pull system; virtual manufacturing; SME; lean six sigma; fuzzy linguistic; natural language; lean management; Markov chain; optimal control; supply chain collaboration; hotel industry; logistic optimization; machine learning; e-health cloud; fuzzy goal programming; facility location; fuzzy theory; neural network; reverse logistics; TOPSIS; quality management; particle swarm optimization; power quality monitoring systems; finite element analysis; e-commerce cloud; virtual reality; innovation; and industrial management.},
	archivePrefix = {arXiv},
	arxivId = {arXiv:1011.1669v3},
	author = {Antonopoulos, A. M.},
	booktitle = {Journal of World Trade},
	doi = {10.1002/ejoc.201200111},
	eprint = {arXiv:1011.1669v3},
	isbn = {9781107671812},
	issn = {10116702},
	number = {4},
	pages = {675--704},
	pmid = {26840611},
	title = {{Mastering Bitcoin}},
	volume = {50},
	year = {2016}
}

@misc{blockfilter-wiki,
	mendeley-groups = {Bitcoin Protocol},
	month = {feb},
	title = {{Client-side block filtering - Bitcoin Wiki}},
	note = {\url {https://en.bitcoin.it/wiki/Client-side_block_filtering}},
	urldate = {2020-09-06},
	year = {2019}
}


@misc{Back2015,
	author = {Back, Adam},
	booktitle = {Bitcoin-development mailing list},
	mendeley-groups = {Bitcoin Protocol},
	month = {feb},
	title = {{Bloom Filtering, Privacy}},
	note = {\url{https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-February/007500.html}},
	urldate = {2020-09-05},
	year = {2015}
}




@misc{Hearn2015,
	author = {Hearn, Mike},
	mendeley-groups = {Bitcoin Protocol},
	month = {feb},
	title = {{Bloom filter privacy and thoughts on a newer protocol}},
	note = {\url{https://groups.google.com/g/bitcoinj/c/Ys13qkTwcNg/m/9qxnhwnkeoIJ}},
	urldate = {2020-09-03},
	year = {2015}
}


@inproceedings{Meiklejohn2013,
	author = {Meiklejohn, Sarah and Pomarole, Marjori and Jordan, Grant and Levchenko, Kirill and McCoy, Damon and Voelker, Geoffrey M. and Savage, Stefan},
	title = {A Fistful of Bitcoins: Characterizing Payments among Men with No Names},
	year = {2013},
	isbn = {9781450319539},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	note = {\url{https://doi.org/10.1145/2504730.2504747}},
	doi = {10.1145/2504730.2504747},
	abstract = {Bitcoin is a purely online virtual currency, unbacked by either physical commodities or sovereign obligation; instead, it relies on a combination of cryptographic protection and a peer-to-peer protocol for witnessing settlements. Consequently, Bitcoin has the unintuitive property that while the ownership of money is implicitly anonymous, its flow is globally visible. In this paper we explore this unique characteristic further, using heuristic clustering to group Bitcoin wallets based on evidence of shared authority, and then using re-identification attacks (i.e., empirical purchasing of goods and services) to classify the operators of those clusters. From this analysis, we characterize longitudinal changes in the Bitcoin market, the stresses these changes are placing on the system, and the challenges for those seeking to use Bitcoin for criminal or fraudulent purposes at scale.},
	booktitle = {Proceedings of the 2013 Conference on Internet Measurement Conference},
	pages = {127–140},
	numpages = {14},
	keywords = {anonymity, bitcoin, measurement},
	location = {Barcelona, Spain},
	series = {IMC '13}
}

@misc{PeterTodd,
	author = {Todd, Peter},
	booktitle = {Github},
	title = {petertodd/bloom-io-attack},
	note = {\url{https://github.com/petertodd/bloom-io-attack}},
	urldate = {2020-09-01}
}



@article{Swamidass2007,
	abstract = {In many modern chemoinformatics systems, molecules are represented by long binary fingerprint vectors recording the presence or absence of particular features or substructures, such as labeled paths or trees, in the molecular graphs. These long fingerprints are often compressed to much shorter fingerprints using a simple modulo operation. As the length of the fingerprints decreases, their typical density and overlap tend to increase, and so does any similarity measure based on overlap, such as the widely used Tanimoto similarity. Here we show that this correlation between shorter fingerprints and higher similarity can be thought of as a systematic error introduced by the fingerprint folding algorithm and that this systematic error can be corrected mathematically. More precisely, given two molecules and their compressed fingerprints of a given length, we show how a better estimate of their uncompressed overlap, hence of their similarity, can be derived to correct for this bias. We show how the correction can be implemented not only for the Tanimoto measure but also for all other commonly used measures. Experiments on various data sets and fingerprint sizes demonstrate how, with a negligible computational overhead, the correction noticeably improves the sensitivity and specificity of chemical retrieval. {\textcopyright} 2007 American Chemical Society.},
	author = {Swamidass, S. Joshua and Baldi, Pierre},
	doi = {10.1021/ci600526a},
	issn = {15499596},
	journal = {Journal of Chemical Information and Modeling},
	month = {may},
	number = {3},
	pages = {952--964},
	pmid = {17444629},
	publisher = {American Chemical Society},
	title = {{Mathematical correction for fingerprint similarity measures to improve chemical retrieval}},
	note = {\url{https://pubs.acs.org/doi/abs/10.1021/ci600526a}},
	volume = {47},
	year = {2007}
}


@article{Nick2015,
	abstract = {We analyse the performance of several clustering algorithms in the digital peer- to-peer currency Bitcoin. Clustering in Bitcoin refers to the task of finding addresses that belongs to the same wallet as a given address. In order to assess the effectiveness of clustering strategies we exploit a vulner- ability in the implementation of Connection Bloom Filtering to capture ground truth data about 37,585 Bitcoin wallets and the addresses they own. In addition to well-known clustering techniques, we introduce two new strategies, apply them on addresses of the collected wallets and evaluate precision and recall using the ground truth. Due to the nature of the Connection Bloom Filtering vulnerability the data we collect is not without errors. We present a method to correct the performance metrics in the presence of such inaccuracies. Our results demonstrate that even modern wallet software can not protect its users properly. Even with the most basic clustering technique known as multi- input heuristic, an adversary can guess on average 68.59% addresses of a victim. We show that this metric can be further improved by combining several more sophisticated heuristics.},
	author = {Nick, Jonas David},
	doi = {10.3929/ethz-a-010541254},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Nick - 2015 - Data-Driven De-Anonymization in Bitcoin.pdf:pdf},
	journal = {ETH Zurich},
	keywords = {DATA SECURITY + DATA PROTECTION (OPERATING SYSTEMS,DATENSICHERHEIT + DATENSCHUTZ (BETRIEBSSYSTEME),ELECTRONIC MONEY,ELEKTRONISCHES GELD,PROGRAMME UND ALGORITHMEN ZUR L{\"{O}}SUNG SPEZIELLER PR,PROGRAMS AND ALGORITHMS FOR THE SOLUTION OF SPECIA,SPECIAL PROGRAMMING METHODS,SPEZIELLE PROGRAMMIERMETHODEN},
	pages = {1--32},
	publisher = {ETH-Z{\"{u}}rich},
	title = {{Data-Driven De-Anonymization in Bitcoin}},
	note = {\url{https://www.research-collection.ethz.ch/handle/20.500.11850/155286}},
	year = {2015}
}


@incollection{Grochowski2020,
	abstract = {Abstract Long-haul travel does not constitute an obstacle for tourists to travel and is fast gaining the attention of tourists in new and unique experiences. This study was conducted to identify the long-haul travel motivation by international tourists to Penang. A total of 400 respondents participated in this survey, conducted around the tourist attractions in Penang, using cluster random sampling. However, only 370 questionnaires were only used for this research. Data were analysed using SPSS software 22 version. The findings, ‘knowledge and novelty seeking' were the main push factors that drove long-haul travel by international tourists to Penang. Meanwhile, the main pull factor that attracts long- haul travel by international tourists to Penang was its ‘culture and history'. Additionally, there were partly direct and significant relationships between socio-demographic, trip characteristics and travel motivation (push factors and pull factors). Overall, this study identified the long-haul travel motivations by international tourists to Penang based on socio-demographic, trip characteristics and travel motivation and has indirectly helped in understanding the long-haul travel market particularly for Penang and Southeast Asia. This research also suggested for an effective marketing and promotion strategy in pro- viding useful information that is the key to attract international tourists to travel long distances. Keywords:},
	author = {Grochowski, Konrad and Breiter, Micha{\l} and Nowak, Robert},
	booktitle = {Introduction to Data Science and Machine Learning},
	doi = {10.5772/intechopen.86917},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Grochowski, Breiter, Nowak - 2020 - Serialization in Object-Oriented Programming Languages.pdf:pdf},
	month = {mar},
	publisher = {IntechOpen},
	title = {{Serialization in Object-Oriented Programming Languages}},
	year = {2020}
}


@misc{Alison2014,
	author = {Alison, Bob},
	booktitle = {r/Bitcoin},
	mendeley-groups = {Bitcoin Protocol},
	month = {sep},
	title = {{Electrum security/privacy model?}},
	note = {\url{https://www.reddit.com/r/Bitcoin/comments/2feox9/electrum_securityprivacy_model/}},
	urldate = {2020-08-26},
	year = {2014}
}


@misc{ElectrumX,
	author = {Booth, Neil and Bauer, Johann and Jegutanis, John},
	mendeley-groups = {Bitcoin Protocol},
	title = {{ElectrumX — Lightweight Electrum Server in Python}},
	note = {\url{https://electrumx.readthedocs.io/en/latest/}},
	urldate = {2020-08-26}
}

@misc{Bitcoincore.org,
	abstract = {Bitcoin is an experimental digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.},
	author = {Bitcoincore.org},
	booktitle = {github.com},
	mendeley-groups = {Bitcoin Protocol},
	title = {{bitcoin/bitcoin: Bitcoin Core integration/staging tree}},
	note = {\url{https://github.com/bitcoin/bitcoin}},
	urldate = {2020-08-26}
}


@misc{P2P_ref,
	author = {Bitcoin},
	booktitle = {developer.bitcoin.org},
	mendeley-groups = {Bitcoin Protocol},
	title = {{P2P Network (Reference) — Bitcoin}},
	note = {\url{https://developer.bitcoin.org/reference/p2p_networking.html\#getblocks}},
	urldate = {2020-08-25}
}

@misc{P2P_dev,
	author = {Bitcoin},
	booktitle = {developer.bitcoin.org},
	mendeley-groups = {Bitcoin Protocol},
	title = {{P2P Network (Developer Guide) — Bitcoin}},
	note = {\url{https://developer.bitcoin.org/devguide/p2p_network.html}},
	urldate = {2020-08-25}
}


@misc{Garzik,
	author = {Garzik, Jeff},
	mendeley-groups = {Bitcoin Protocol},
	title = {{jgarzik/picocoin: A bitcoin library in C, SPV wallet \& more.}},
	note = {\url{https://github.com/jgarzik/picocoin/\#readme}},
	urldate = {2020-08-25}
}


@misc{Electrum,
	mendeley-groups = {Bitcoin Protocol},
	title = {{Electrum Bitcoin Wallet}},
	note = {\url{https://electrum.org/\#home}},
	urldate = {2020-08-25},
	year = {2016}
}

@misc{Osuntokun2-2017,
	author = {Osuntokun, Olaoluwa and Akselrod, Alex},
	mendeley-groups = {Bitcoin Protocol},
	title = {{bips/bip-0158.mediawiki at master {\textperiodcentered} bitcoin/bips - Compact Block Filters for Light Clients}},
	note = {\url{https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki\#cite_ref-4-0}},
	urldate = {2020-09-05},
	year = {2017}
}




@misc{Osuntokun2017,
	author = {Osuntokun, Olaoluwa and Akselrod, Alex and Posen, Jim},
	title = {{bips/bip-0157.mediawiki at master {\textperiodcentered} bitcoin/bips - Client Side Block Filtering}},
	note = {\url{https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki}},
	urldate = {2020-08-16},
	year = {2017}
}


@inproceedings{Lodha2008,
	abstract = {In this age of globalization, organizations need to publish their micro-data owing to legal directives or share it with business associates in order to remain competitive. This puts personal privacy at risk. To surmount this risk, attributes that clearly identify individuals, such as Name, Social Security Number, and Driving License Number, are generally removed or re- placed by random values. But this may not be enough because such de-identified databases can sometimes be joined with other public databases on attributes such as Gender, Date of Birth, and Zipcode to re-identify individuals who were supposed to remain anonymous. In the literature, such an identity-leaking attribute combination is called as a quasi-identifier. It is always critical to be able to recognize quasi-identifiers and to apply to them appropriate protective measures to mitigate the identity disclosure risk posed by join attacks.},
	address = {Berlin, Heidelberg},
	author = {Lodha, Sachin and Thomas, Dilys},
	booktitle = {Privacy, Security, and Trust in KDD},
	editor = {Bonchi, Francesco and Ferrari, Elena and Malin, Bradley and Saygin, Y{\"{u}}cel},
	isbn = {978-3-540-78478-4},
	mendeley-groups = {K-anonymity},
	pages = {56--79},
	publisher = {Springer Berlin Heidelberg},
	title = {{Probabilistic Anonymity}},
	year = {2008}
}

@article{Sweeney2002,
	abstract = { Consider a data holder, such as a hospital or a bank, that has a privately held collection of person-specific, field structured data. Suppose the data holder wants to share a version of the data with researchers. How can a data holder release a version of its private data with scientific guarantees that the individuals who are the subjects of the data cannot be re-identified while the data remain practically useful? The solution provided in this paper includes a formal protection model named k-anonymity and a set of accompanying policies for deployment. A release provides k-anonymity protection if the information for each person contained in the release cannot be distinguished from at least k-1 individuals whose information also appears in the release. This paper also examines re-identification attacks that can be realized on releases that adhere to k-anonymity unless accompanying policies are respected. The k-anonymity protection model is important because it forms the basis on which the real-world systems known as Datafly, $\mu$-Argus and k-Similar provide guarantees of privacy protection. },
	author = {Sweeney, Latanya},
	doi = {10.1142/S0218488502001648},
	journal = {International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems},
	mendeley-groups = {K-anonymity},
	number = {05},
	pages = {557--570},
	title = {{K-anonymity: a model for protecting privacy}},
	note = {\url{https://doi.org/10.1142/S0218488502001648}},
	volume = {10},
	year = {2002}
}


@article{Bianchi2012,
	abstract = {Bloom filters are probabilistic data structures which permit to conveniently represent set membership. Their performance/memory efficiency makes them appealing in a huge variety of scenarios. Their probabilistic operation, along with the implicit data representation, yields some ambiguity on the actual data stored, which, in scenarios where cryptographic protection is unviable or unpractical, may be somewhat considered as a better than nothing privacy asset. Oddly enough, even if frequently mentioned, to the best of our knowledge the (soft) privacy properties of Bloom filters have never been explicitly quantified. This work aims to fill this gap. Starting from the adaptation of probabilistic anonymity metrics to the Bloom filter setting, we derive exact and (tightly) approximate formulae which permit to readily relate privacy properties with filter (and universe set) parameters. Using such relations, we quantitatively investigate the emerging privacy/utility trade-offs. We finally preliminary assess the advantages that a tailored insertion of a few extra (covert) bits achieves over the commonly employed strategy of increasing ambiguity via addition of random bits. {\textcopyright} 2012 Springer-Verlag Berlin Heidelberg.},
	author = {Bianchi, Giuseppe and Bracciale, Lorenzo and Loreti, Pierpaolo},
	doi = {10.1007/978-3-642-33627-0-27},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Bloom Filter/bianchi2012.pdf:pdf},
	isbn = {9783642336263},
	issn = {03029743},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	mendeley-groups = {Bloom Filter},
	pages = {348--363},
	title = {{Better than nothing privacy with bloom filters: To what extent?}},
	volume = {7556 LNCS},
	year = {2012}
}


@article{Christensen2010,
	abstract = {A Bloom filter is a space-efficient data structure used for probabilistic set membership testing. When testing an object for set membership, a Bloom filter may give a false positive. The analysis of the false positive rate is a key to understanding the Bloom filter and applications that use it. We show experimentally that the classic analysis for false positive rate is wrong. We formally derive a correct formula using a balls-and-bins model and show how to numerically compute the new, correct formula in a stable manner. We also prove that the new formula always results in a predicted greater false positive rate than the classic formula. This correct formula is numerically compared to the classic formula for relative error - for a small Bloom filter the prediction of false positive rate will be in error when the classic formula is used. {\textcopyright} 2010 Elsevier B.V. All rights reserved.},
	author = {Christensen, Ken and Roginsky, Allen and Jimeno, Miguel},
	doi = {10.1016/j.ipl.2010.07.024},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Bloom Filter/Christensen2010.pdf:pdf},
	issn = {00200190},
	journal = {Information Processing Letters},
	keywords = {Analysis of algorithms,Bloom filters,Data structures},
	mendeley-groups = {Bloom Filter},
	number = {21},
	pages = {944--949},
	publisher = {Elsevier B.V.},
	title = {{A new analysis of the false positive rate of a Bloom filter}},
	note = {\url{http://dx.doi.org/10.1016/j.ipl.2010.07.024}},
	volume = {110},
	year = {2010}
}


@article{Mullin1983,
	abstract = {This note deals with a paper by Gremillion demonstrating the simulation approach to the design of a Bloom filter. It is shown that an analytical approach can yield insights into competing filter design and give expected values for the goodness-of-hash transformations not available with simulation. On the other hand, simulation gives insight into what can be expected with available hash transformation not available from an analytic approach. {\textcopyright} 1983, ACM. All rights reserved.},
	author = {Mullin, James K.},
	doi = {10.1145/358161.358167},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Bloom Filter/mullin1983.pdf:pdf},
	issn = {15577317},
	journal = {Communications of the ACM},
	keywords = {bloom,differential file,filter},
	mendeley-groups = {Bloom Filter},
	month = {aug},
	number = {8},
	pages = {570--571},
	title = {{A second look at bloom filters}},
	volume = {26},
	year = {1983}
}


@article{Kanemura2017,
	abstract = {Bitcoin is a decentralized currency system that does not need any central authorities. All transactions issued by users have been recorded in the common ledger, called blockchain, which is shared by all users. In Bitcoin, an SPV (Simplified Payment Verification) client, which is a lightweight client that does not possess the entire blockchain, are developed for storage constrained devices such as a mobile phone. For an SPV client to check if there are transactions related to it, a Bloom filter where their Bitcoin addresses are involved is sent to a full client that possesses the entire blockchain. The full client only transfers transactions of which Bitcoin addresses are positive on the received Bloom filter. However, it is necessary to preserve the privacy of SPV clients when designing a Bloom filter because SPV clients' Bitcoin addresses will be identified by a full client with high probability. In this paper, we propose a privacy-preserving Bloom filter design for SPV clients based on $\gamma$-Deniability. $\gamma$-Deniability is a privacy metric that shows how much true positive Bitcoin addresses are hidden by the false positives in a Bloom filter. Furthermore, in order to design a Bloom Filter that satisfies a certain $\gamma$-Deniability, it is necessary to know the number of unique Bitcoin addresses that appear for the first time since the queried time. Based on our manual inspection, we propose to estimate it based on the linear regression. We show that our scheme achieves good estimation accuracy and $\gamma$ through the simulation with a real Bitcoin blockchain.},
	author = {Kanemura, Kota and Toyoda, Kentaroh and Ohtsuki, Tomoaki},
	doi = {10.1109/PIMRC.2017.8292537},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/kanemura2017.pdf:pdf},
	isbn = {9781538635315},
	journal = {2017 IEEE 28th Annual International Symposium on Personal, Indoor, and Mobile Radio Communications (PIMRC)},
	mendeley-groups = {Bloom Filter},
	pages = {1--6},
	title = {{Design of privacy-preserving mobile bitcoin client based on $\gamma$-deniability enabled bloom filter}},
	volume = {2017-October},
	year = {2017}
}


@misc{EPID,
	mendeley-groups = {SGX},
	title = {{Intel{\textregistered} SGX Attestation Service Utilizing Enhanced Privacy ID (EPID)}},
	note = {\url{https://api.portal.trustedservices.intel.com/EPID-attestation}},
	urldate = {2020-07-31}
}

@inproceedings{Kocher2019,
	abstract = {Modern processors use branch prediction and speculative execution to maximize performance. For example, if the destination of a branch depends on a memory value that is in the process of being read, CPUs will try to guess the destination and attempt to execute ahead. When the memory value finally arrives, the CPU either discards or commits the speculative computation. Speculative logic is unfaithful in how it executes, can access the victim's memory and registers, and can perform operations with measurable side effects. Spectre attacks involve inducing a victim to speculatively perform operations that would not occur during correct program execution and which leak the victim's confidential information via a side channel to the adversary. This paper describes practical attacks that combine methodology from side channel attacks, fault attacks, and return-oriented programming that can read arbitrary memory from the victim's process. More broadly, the paper shows that speculative execution implementations violate the security assumptions underpinning numerous software security mechanisms, including operating system process separation, containerization, just-in-time (JIT) compilation, and countermeasures to cache timing and side-channel attacks. These attacks represent a serious threat to actual systems since vulnerable speculative execution capabilities are found in microprocessors from Intel, AMD, and ARM that are used in billions of devices. While makeshift processor-specific countermeasures are possible in some cases, sound solutions will require fixes to processor designs as well as updates to instruction set architectures (ISAs) to give hardware architects and software developers a common understanding as to what computation state CPU implementations are (and are not) permitted to leak.},
	author = {Kocher, Paul and Horn, Jann and Fogh, Anders and Genkin, Daniel and Gruss, Daniel and Haas, Werner and Hamburg, Mike and Lipp, Moritz and Mangard, Stefan and Prescher, Thomas and Schwarz, Michael and Yarom, Yuval},
	booktitle = {Proceedings - IEEE Symposium on Security and Privacy},
	doi = {10.1109/SP.2019.00002},
	isbn = {9781538666609},
	issn = {10816011},
	keywords = {Microarchitectural-attack,Microarchitecture-security,Spectre,Speculative-execution},
	mendeley-groups = {SGX},
	month = {may},
	pages = {1--19},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	title = {{Spectre attacks: Exploiting speculative execution}},
	volume = {2019-May},
	year = {2019}
}

@article{Lipp2020,
	abstract = {Memory isolation is a cornerstone security feature in the construction of every modern computer system. Allowing the simultaneous execution of multiple mutually distrusting applications at the same time on the same hardware, it is the basis of enabling secure execution of multiple processes on the same machine or in the cloud. The operating system is in charge of enforcing this isolation, as well as isolating its own kernel memory regions from other users. Given its central role on modern processors, the isolation between the kernel and user processes is backed by the hardware, in the form of a supervisor bit that determines whether code in the current.},
	author = {Lipp, Moritz and Schwarz, Michael and Gruss, Daniel and Prescher, Thomas and Haas, Werner and Horn, Jann and Mangard, Stefan and Kocher, Paul and Genkin, Daniel and Yarom, Yuval and Hamburg, Mike and Strackx, Raoul},
	doi = {10.1145/3357033},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Lipp et al. - 2018 - Meltdown Reading Kernel Memory from User Space.pdf:pdf},
	isbn = {978-1-939133-04-5},
	issn = {15577317},
	journal = {Communications of the ACM},
	mendeley-groups = {SGX},
	number = {6},
	pages = {46--56},
	title = {{Meltdown: Reading Kernel Memory from User Space}},
	note = {\url{https://www.usenix.org/conference/usenixsecurity18/presentation/lipp}},
	volume = {63},
	year = {2020}
}


@inproceedings{Rane2015,
	abstract = {Side-channel attacks monitor some aspect of a computer system's behavior to infer the values of secret data. Numerous side-channels have been exploited, including those that monitor caches, the branch predictor, and the memory address bus. This paper presents a method of defending against a broad class of side-channel attacks, which we refer to as digital side-channel attacks. The key idea is to obfuscate the program at the source code level to provide the illusion that many extraneous program paths are executed. This paper describes the technical issues involved in using this idea to provide confidentiality while minimizing execution overhead. We argue about the correctness and security of our compiler transformations and demonstrate that our transformations are safe in the context of a modern processor. Our empirical evaluation shows that our solution is 8.9× faster than prior work (GhostRider [20]) that specifically defends against memory trace-based side-channel attacks.},
	author = {Rane, Ashay and Lin, Calvin and Tiwari, Mohit},
	booktitle = {Proceedings of the 24th USENIX Security Symposium},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Rane, Lin, Tiwari - 2015 - Raccoon Closing digital side-channels through obfuscated execution.pdf:pdf},
	isbn = {9781931971232},
	mendeley-groups = {SGX},
	pages = {431--446},
	title = {{Raccoon: Closing digital side-channels through obfuscated execution}},
	note = {\url{https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/rane}},
	year = {2015}
}


@inproceedings{Stefanov2013,
	abstract = {We present Path ORAM, an extremely simple Oblivious RAM protocol with a small amount of client storage. Partly due to its simplicity, Path ORAM is the most practical ORAM scheme for small client storage known to date. We formally prove that Path ORAM requires O(log2 N / log $\chi$) bandwidth overhead for block size B = $\chi$ log N. For block sizes bigger than $\omega$(log2 N), Path ORAM is asymptotically better than the best known ORAM scheme with small client storage. Due to its practicality, Path ORAM has been adopted in the design of secure processors since its proposal. {\textcopyright} 2013 ACM.},
	address = {New York, New York, USA},
	archivePrefix = {arXiv},
	arxivId = {1202.5150},
	author = {Stefanov, Emil and {Van Dijk}, Marten and Shi, Elaine and Fletcher, Christopher and Ren, Ling and Yu, Xiangyao and Devadas, Srinivas},
	booktitle = {Proceedings of the ACM Conference on Computer and Communications Security},
	doi = {10.1145/2508859.2516660},
	eprint = {1202.5150},
	isbn = {9781450324779},
	issn = {15437221},
	keywords = {access pattern,oblivious ram,oram,path oram},
	mendeley-groups = {PIR},
	pages = {299--310},
	publisher = {ACM Press},
	title = {{Path ORAM: An extremely simple oblivious RAM protocol}},
	note = {\url{http://dl.acm.org/citation.cfm?doid=2508859.2516660}},
	year = {2013}
}


@article{Bulck2020,
	abstract = {The recent Spectre attack first showed how to inject incorrect branch targets into a victim domain by poisoning microarchitectural branch prediction history. In this paper, we generalize injection-based methodologies to the memory hierarchy by directly injecting incorrect, attacker-controlled values into a victim's transient execution. We propose Load Value Injection (LVI) as an innovative technique to reversely exploit Meltdown-type microarchitectural data leakage. LVI abuses that faulting or assisted loads, executed by a legitimate victim program, may transiently use dummy values or poisoned data from various microarchitectural buffers, before eventually being reissued by the processor. We show how LVI gadgets allow to expose victim secrets and hijack transient control flow. We practically demonstrate LVI in several proof-of-concept attacks against Intel SGX enclaves, and we discuss implications for traditional user process and kernel isolation. State-of-the-art Meltdown and Spectre defenses, including widespread silicon-level and microcode mitigations, are orthogonal to our novel LVI techniques. LVI drastically widens the spectrum of incorrect transient paths. Fully mitigating our attacks requires serializing the processor pipeline with lfence instructions after possibly every memory load. Additionally and even worse, due to implicit loads, certain instructions have to be blacklisted, including the ubiquitous x86 ret instruction. Intel plans compiler and assembler-based full mitigations that will allow at least SGX enclave programs to remain secure on LVI-vulnerable systems. Depending on the application and optimization strategy, we observe extensive overheads of factor 2 to 19 for prototype implementations of the full mitigation.},
	author = {Bulck, Jo Van and Moghimi, Daniel and Schwarz, Michael and Lipp, Moritz and Minkin, Marina and Genkin, Daniel and Yarom, Yuval and Sunar, Berk and Gruss, Daniel and Piessens, Frank},
	doi = {10.1109/SP40000.2020.00089},
	journal = {IEEE S\&P 2020},
	mendeley-groups = {SGX},
	pages = {54--72},
	title = {{LVI : Hijacking Transient Execution through Microarchitectural Load Value Injection}},
	year = {2020}
}


@misc{SGX,
	author = {Victor Costan and Srinivas Devadas},
	title = {Intel SGX Explained},
	howpublished = {Cryptology ePrint Archive, Report 2016/086},
	year = {2016},
	note = {\url{https://eprint.iacr.org/2016/086}},
}

@article{Devet2014,
	abstract = {The goal of Private Information Retrieval (PIR) is the ability to query a database successfully without the operator of the database server discovering which record(s) of the database the querier is interested in. There are two main classes of PIR protocols: those that provide privacy guarantees based on the computational limitations of servers (CPIR) and those that rely on multiple servers not colluding for privacy (IT-PIR). These two classes have different advantages and disadvantages that make them more or less attractive to designers of PIR-enabled privacy enhancing technologies. We present a hybrid PIR protocol that combines two PIR protocols, one from each of these classes. Our protocol inherits many positive aspects of both classes and mitigates some of the negative aspects. For example, our hybrid protocol maintains partial privacy when the security assumptions of one of the component protocols is broken, mitigating the privacy loss in such an event. We have implemented our protocol as an extension of the Percy++ library so that it combines a PIR protocol by Aguilar Melchor and Gaborit with one by Goldberg. We show that our hybrid protocol uses less communication than either of these component protocols and that our scheme is particularly beneficial when the number of records in a database is large compared to the size of the records. This situation arises in applications such as TLS certificate verification, anonymous communications systems, private LDAP lookups, and others. {\textcopyright} 2014 Springer International Publishing.},
	author = {Devet, Casey and Goldberg, Ian},
	doi = {10.1007/978-3-319-08506-7_4},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/PIR/hybridpir-pets.pdf:pdf},
	isbn = {9783319085050},
	issn = {16113349},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	mendeley-groups = {PIR},
	pages = {63--82},
	title = {{The best of both worlds: Combining information-theoretic and computational PIR for communication efficiency}},
	volume = {8555 LNCS},
	year = {2014}
}


@inproceedings{Qin2019,
	abstract = {Lightweight Bitcoin clients execute a Simple Payment Verification (SPV) protocol to verify the validity of transactions related to a particular user. Currently, lightweight clients use Bloom filters to significantly reduce the amount of bandwidth required to validate a particular transaction. This is despite the fact that research has shown that Bloom filters are insufficient at preserving the privacy of clients' queries. In this paper we describe our design of an SPV protocol that leverages Private Information Retrieval (PIR) to create fully private and performant queries. We show that our protocol has a low bandwidth and latency cost; properties that make our protocol a viable alternative for lightweight Bitcoin clients and other cryptocurrencies with a similar SPV model. In contract to Bloom filters, our PIR-based approach offers deterministic privacy to the user. Among our results, we show that in the worst case, clients who would like to verify 100 transactions occurring in the past week incurs a bandwidth cost of 33.54 MB with an associated latency of approximately 4.8 minutes, when using our protocol. The same query executed using the Bloom-filter-based SPV protocol incurs a bandwidth cost of 12.85 MB; this is a modest overhead considering the privacy guarantees it provides.},
	author = {Qin, Kaihua and Hadass, Henryk and Gervais, Arthur and Reardon, Joel},
	booktitle = {Proceedings - 2019 Crypto Valley Conference on Blockchain Technology, CVCBT 2019},
	doi = {10.1109/CVCBT.2019.00012},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/qin2019.pdf:pdf},
	isbn = {9781728136691},
	keywords = {Bitcoin,Private Information Retrieval,Simple Payment Verification},
	mendeley-groups = {PIR},
	month = {jun},
	pages = {60--72},
	publisher = {Institute of Electrical and Electronics Engineers Inc.},
	title = {{Applying private information retrieval to lightweight bitcoin clients}},
	year = {2019}
}


@misc{bitcoinj_BloomFilter,
	mendeley-groups = {Websites,Bitcoin Protocol},
	title = {{bitcoinj/BloomFilter.java at master {\textperiodcentered} bitcoinj/bitcoinj}},
	note = {\url{https://github.com/bitcoinj/bitcoinj/blob/master/core/src/main/java/org/bitcoinj/core/BloomFilter.java}},
	urldate = {2020-07-09}
}


@misc{bitcoinj,
	mendeley-groups = {Websites,Bitcoin Protocol},
	title = {bitcoinj},
	note = {\url{https://bitcoinj.github.io/}},
	urldate = {2020-07-09}
}

@misc{Bitly.comTeam2020,
	author = {{Bitly.com Team}},
	mendeley-groups = {Bloom Filter},
	title = {{Bitly | Custom URL Shortener, Link Management \& Branded Links}},
	note = {\url{https://bitly.com/}},
	urldate = {2020-07-08},
	year = {2020}
}

@book{Azar2016,
	author = {Azar, Erik and Alebicto, Mario Eguiluz},
	isbn = {9781785884504},
	mendeley-groups = {Bloom Filter},
	pages = {249--258},
	publisher = {Packt Publishing},
	title = {{Swift Data Structure and Algorithms}},
	year = {2016}
}


@article{Broder2004,
	abstract = {A Bloom filter is a simple space-efficient randomized data structure for representing a set in order to support membership queries. Bloom filters allow false positives but the space savings often outweigh this drawback when the probability of an error is controlled. Bloom filters have been used in database applications since the 1970s, but only in recent years have they become popular in the networking literature. The aim of this paper is to survey the ways in which Bloom filters have been used and modified in a variety of network problems, with the aim of providing a unified mathematical and practical framework for understanding them and stimulating their use in future applications. {\textcopyright} A K Peters, Ltd.},
	author = {Broder, Andrei and Mitzenmacher, Michael},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Bloom Filter/euclid.im.1109191032.pdf:pdf},
	journal = {Internet Mathematics},
	mendeley-groups = {Bloom Filter},
	number = {4},
	pages = {485--509},
	title = {{Network applications of bloom filters: A survey}},
	volume = {1},
	year = {2004}
}


@article{Bloom1970,
	abstract = {In this paper trade-offs among certain computational factors in hash coding are analyzed. The paradigm problem considered is that of testing a series of messages one-by-one for membership in a given set of messages. Two new hash-coding methods are examined and compared with a particular conventional hash-coding method. The computational factors considered are the size of the hash area (space), the time required to identify a message as a nonmember of the given set (reject time), and an allowable error frequency. The new methods are intended to reduce the amount of space required to contain the hash-coded information from that associated with conventional methods. The reduction in space is accomplished by exploiting the possibility that a small fraction of errors of commission may be tolerable in some applications, in particular, applications in which a large amount of data is involved and a core resident hash area is consequently not feasible using conventional methods. In such applications, it is envisaged that overall performance could be improved by using a smaller core resident hash area in conjunction with the new methods and, when necessary, by using some secondary and perhaps time-consuming test to “catch” the small fraction of errors associated with the new methods. An example is discussed which illustrates possible areas of application for the new methods. Analysis of the paradigm problem demonstrates that allowing a small number of test messages to be falsely identified as members of the given set will permit a much smaller hash area to be used without increasing reject time. {\textcopyright} 1970, ACM. All rights reserved.},
	author = {Bloom, Burton H.},
	doi = {10.1145/362686.362692},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Bloom Filter/Bloom1970.pdf:pdf},
	issn = {15577317},
	journal = {Communications of the ACM},
	keywords = {hash addressing,hash coding,retrieval efficiency,retrieval trade-offs,scatter storage,searching,storage efficiency,storage layout},
	mendeley-groups = {Bloom Filter},
	number = {7},
	pages = {422--426},
	title = {{Space/time trade-offs in hash coding with allowable errors}},
	volume = {13},
	year = {1970}
}


@article{Sompolinsky2016,
	abstract = {We revisit the fundamental question of Bitcoin's security against double spending attacks. While previous work has bounded the probability that a transaction is reversed, we show that no such guarantee can be effectively given if the attacker can choose when to launch the attack. Other approaches that bound the cost of an attack have erred in considering only limited attack scenarios, and in fact it is easy to show that attacks may not cost the attacker at all. We therefore provide a different interpretation of the results presented in previous papers and correct them in several ways. We provide different notions of the security of transactions that provide guarantees to different classes of defenders: merchants who regularly receive payments, miners, and recipients of large one-time payments. We additionally consider an attack that can be launched against lightweight clients, and show that these are less secure than their full node counterparts and provide the right strategy for defenders in this case as well. Our results, overall, improve the understanding of Bitcoin's security guarantees and provide correct bounds for those wishing to safely accept transactions.},
	archivePrefix = {arXiv},
	arxivId = {1605.09193},
	author = {Sompolinsky, Yonatan and Zohar, Aviv},
	eprint = {1605.09193},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Sompolinsky, Zohar - 2016 - Bitcoin's Security Model Revisited.pdf:pdf},
	keywords = {()},
	mendeley-groups = {Bitcoin Protocol},
	month = {may},
	title = {{Bitcoin's Security Model Revisited}},
	note = {\url{http://arxiv.org/abs/1605.09193}},
	year = {2016}
}


@article{Ron2013,
	abstract = {The Bitcoin scheme is a rare example of a large scale global payment system in which all the transactions are publicly accessible (but in an anonymous way). We downloaded the full history of this scheme, and analyzed many statistical properties of its associated transaction graph. In this paper we answer for the first time a variety of interesting questions about the typical behavior of users, how they acquire and how they spend their bitcoins, the balance of bitcoins they keep in their accounts, and how they move bitcoins between their various accounts in order to better protect their privacy. In addition, we isolated all the large transactions in the system, and discovered that almost all of them are closely related to a single large transaction that took place in November 2010, even though the associated users apparently tried to hide this fact with many strange looking long chains and fork-merge structures in the transaction graph. {\textcopyright} 2013 Springer-Verlag.},
	author = {Ron, Dorit and Shamir, Adi},
	doi = {10.1007/978-3-642-39884-1_2},
	file = {:home/taghi/Dropbox/Academic/Statistical Analysis/ron2013.pdf:pdf},
	isbn = {9783642398834},
	issn = {03029743},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	keywords = {bitcoin,digital coins,electronic cash,payment systems,quantitative analysis,transaction graphs},
	mendeley-groups = {Bitcoin Protocol/Analysis},
	pages = {6--24},
	title = {{Quantitative analysis of the full Bitcoin transaction graph}},
	volume = {7859 LNCS},
	year = {2013}
}



@article{Niu2015,
	author = {Niu, Ben and Li, Qinghua and Zhu, Xiaoyan and Cao, Guohong and Li, Hui},
	doi = {10.1109/INFOCOM.2015.7218474},
	file = {:home/taghi/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Niu et al. - 2015 - Enhancing privacy through caching in location-based services.pdf:pdf},
	isbn = {9781479983810},
	issn = {0743166X},
	journal = {Proceedings - IEEE INFOCOM},
	keywords = {K-anonymity,LBS,Privacy},
	mendeley-groups = {K-anonymity},
	mendeley-tags = {K-anonymity,LBS,Privacy},
	pages = {1017--1025},
	title = {{Enhancing privacy through caching in location-based services}},
	volume = {26},
	year = {2015}
}

@article{reiter1998crowds,
	title={Crowds: Anonymity for web transactions},
	author={Reiter, Michael K and Rubin, Aviel D},
	journal={ACM transactions on information and system security (TISSEC)},
	volume={1},
	number={1},
	pages={66--92},
	year={1998},
	publisher={ACM New York, NY, USA}
}

@misc{torproject,
	abstract = {The Tor Project's free software protects your privacy online. Site blocked? Email [mailto:gettor@torproject.org] for help downloading Tor Browser.},
	keywords = {anonymity online,anonymous communications research,censorship circumvention,tor,tor project,traffic analysis},
	title = {{Tor Project: Anonymity Online}},
	note = {\url{https://www.torproject.org/}},
	urldate = {2020-05-01}
}

@misc{Wuille2017,
	abstract = {This document proposes a checksummed base32 format, "Bech32", and a standard for native segregated witness output addresses using it.},
	author = {Wuille, Pieter},
	keywords = {BIP,Bitcoin},
	mendeley-tags = {BIP,Bitcoin},
	title = {{BIP 0173 - Bitcoin Wiki}},
	note = {\url{https://en.bitcoin.it/wiki/BIP_0173}},
	urldate = {2020-05-19},
	year = {2017}
}

@misc{Hearn2013,
	author = {Hearn, Mike and Corallo, Matt},
	booktitle = {Bitcoin Wiki},
	title = {{BIP 0037}},
	note = {\url{https://en.bitcoin.it/wiki/BIP_0037}},
	urldate = {2020-05-20},
	year = {2013}
}

@article{Nakamoto2009,
	abstract = {A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. Digital signatures provide part of the solution, but the main benefits are lost if a trusted third party is still required to prevent double-spending. We propose a solution to the double-spending problem using a peer-to-peer network. The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work, forming a record that cannot be changed without redoing the proof-of-work. The longest chain not only serves as proof of the sequence of events witnessed, but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network, they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis, and nodes can leave and rejoin the network at will, accepting the longest proof-of-work chain as proof of what happened while they were gone.},
	author = {Nakamoto, Satoshi},
	doi = {10.2139/ssrn.3440802},
	journal = {SSRN Electronic Journal},
	title = {{Bitcoin: A Peer-to-Peer Electronic Cash System}},
	note = {\url{https://bitcoin.org/en/bitcoin-paper}},
	year = {2009}
}

@article{Gervais2014,
	abstract = {Lightweight Bitcoin clients are gaining increasing adoption among Bitcoin users, owing to their reduced resource and bandwidth consumption. These clients support a simplified payment verification (SPV) mode as they are only required to download and verify a part of the block chain-thus supporting the usage of Bitcoin on constrained devices, such as smartphones. SPV clients rely on Bloom filters to receive transactions that are relevant to their local wallet. These filters embed all the Bitcoin addresses used by the SPV clients, and are outsourced to more powerful Bitcoin nodes which then only forward to those clients transactions relevant to their outsourced Bloom filters. In this paper, we explore the privacy of existing SPV clients. We show analytically and empirically that the reliance on Bloom filters within existing SPV clients leaks considerable information about the addresses of Bitcoin users. Our results show that an SPV client who uses a modest number of Bitcoin addresses (e.g., < 20) risks revealing almost all of his addresses. We also show that this information leakage is further exacerbated when users restart their SPV clients and/or when the adversary has access to more than one Bloom filter pertaining to the same SPV client. Motivated by these findings, we propose an efficient countermeasure to enhance the privacy of users which rely on SPV clients; our proposal can be directly integrated within existing SPV client implementations.},
	author = {Gervais, Arthur and Karame, Ghassan O. and Gruber, Damian and Capkun, Srdjan},
	doi = {10.1145/2664243.2664267},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/Gervais2014.pdf:pdf},
	journal = {ACM International Conference Proceeding Series},
	number = {December},
	pages = {326--335},
	title = {{On the privacy provisions of bloom filters in lightweight bitcoin clients}},
	volume = {2014-Decem},
	year = {2014}
}

@article{Matetic2019,
	abstract = {Blockchains offer attractive advantages over traditional payments such as the ability to operate without a trusted authority and increased user privacy. However, the verification of blockchain payments requires the user to download and process the entire chain which can be infeasible for resource-constrained devices like mobile phones. To address this problem, most major blockchain systems support so called lightweight clients that outsource most of the computational and storage burden to full blockchain nodes. However, such verification leaks critical information about clients' transactions, thus defeating user privacy that is often considered one of the main goals of decentralized cryptocurrencies. In this paper, we propose a new approach to protect the privacy of light clients in Bitcoin. Our main idea is to leverage the trusted execution capabilities of commonly available SGX enclaves. We design and implement a system called BITE where enclaves on full nodes serve privacy-preserving requests from light clients. However, as we will show, naive processing of client requests from within SGX enclaves still leaks client's addresses and transactions. BITE therefore integrates several private information retrieval and side-channel protection techniques at critical parts of the system. We show that BITE provides significantly improved privacy protection for light clients without compromising the performance of the assisting full nodes.},
	author = {Matetic, Sinisa and Kostiainen, Kari and W{\"{u}}st, Karl and Karame, Ghassan and Schneider, Moritz and Capkun, Srdjan},
	file = {:home/taghi/Dropbox/Academic/SecurityandPrivacy/Lightweight/sec19-matetic.pdf:pdf},
	isbn = {9781939133069},
	journal = {Proceedings of the 28th USENIX Security Symposium},
	pages = {783--800},
	title = {{BITE: Bitcoin lightweight client privacy using trusted execution}},
	year = {2019}
}

